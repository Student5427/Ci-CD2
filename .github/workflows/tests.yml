name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Cache Poetry virtualenv
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          .venv
        key: poetry-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        # Устанавливаем только основные зависимости без тестовых
        poetry lock --no-interaction
        poetry install --no-interaction --no-root
        
        # Отдельно устанавливаем тестовые зависимости с явным указанием версий
        poetry add pytest@^7.4.0 pytest-cov@^4.1.0 alembic@^1.11.3 --group dev

    - name: Wait for PostgreSQL
      run: |
        for i in {1..10}; do
          if nc -z localhost 5432; then
            echo "PostgreSQL is ready"
            exit 0
          fi
          echo "Waiting for PostgreSQL... ($i/10)"
          sleep 2
        done
        echo "PostgreSQL failed to start"
        exit 1

    - name: Apply migrations
      env:
        DATABASE_URL: "postgresql://test_user:test_pass@localhost:5432/test_db"
        PYTHONPATH: "${{ github.workspace }}"
      run: |
        poetry run alembic upgrade head

    - name: Run tests
      env:
        SECRET_KEY: "dummy-secret-key-for-tests"
        ALGORITHM: "HS256"
        ACCESS_TOKEN_EXPIRE_MINUTES: "30"
        EMAIL_SENDER: "noreply@test.com"
        SMTP_SERVER: "smtp.test.com"
        SMTP_PORT: "587"
        SMTP_USERNAME: "user@test.com"
        SMTP_PASSWORD: "password"
        POSTGRES_USER: "test_user"
        POSTGRES_PASSWORD: "test_pass"
        POSTGRES_HOST: "localhost"
        POSTGRES_PORT: "5432"
        POSTGRES_DB: "test_db"
        FIRST_SUPERUSER: "admin@test.com"
        FIRST_SUPERUSER_PASSWORD: "password"
        USERS_OPEN_REGISTRATION: "True"
        TESTING: "True"
        PYTHONPATH: "${{ github.workspace }}"
      run: |
        poetry run pytest --cov -v